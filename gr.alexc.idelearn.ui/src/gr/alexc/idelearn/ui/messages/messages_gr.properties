reqClass = Πρέπει να υπάρχει μια κλάση με όνομα "{0}"
reqClassAbstract = Πρέπει να υπάρχει μια αφηρημένη κλάση με όνομα "{0}"
reqExtend = Η κλάση "{0}" πρέπει να επεκτείνει την κλάση "{1}".
reqExtendName = Η κλάση "{0}" πρέπει να επεκτείνει την κλάση "{1}".
reqImplementName = Η κλάση "{0}" πρέπει να υλοποιεί την διεπαφή "{1}".
reqContains = Η κλάση "{0}" πρέπει να έχει αναφορά σε αντικείμενο της κλάσης "{1}".
reqContainsMany = Η κλάση "{0}" πρέπει να έχει αναφορά σε μια συλλογή από αντικείμενα της κλάσης "{1}".
reqContainsField = Η κλάση "{0}" πρέπει να περιέχει ένα {1} πεδίο τύπου "{2}" με όνομα "{3}".
reqContainsFieldGetter = Η κλάση "{0}" πρέπει να περιέχει ένα {1} πεδίο τύπου "{2}" με όνομα "{3}" με getter.
reqContainsFieldSetter = Η κλάση "{0}" πρέπει να περιέχει ένα {1} πεδίο τύπου "{2}" με όνομα "{3}" με setter.
reqContainsFieldGetterSetter = Η κλάση "{0}" πρέπει να περιέχει ένα {1} πεδίο τύπου "{2}" με όνομα "{3}" με setter και getter.
reqPrivate = ιδιωτικό
reqPublic = δημόσιο
reqProtected = protected
reqStatic = στατικό
reqAbstract = αφηρημένο
reqPrivateF = ιδιωτική
reqPublicF = δημόσια
reqProtectedF = protected
reqStaticF = στατική
reqAbstractF = αφηρημένη
reqMethod = Η κλάση "{0}" πρέπει να περιέχει μια {1} μέθοδο με όνομα "{2}", ορίσματα {3}  η οποία να επιστρέφει {4}.
reqMethodVoid = Η κλάση "{0}" πρέπει να περιέχει μια {1} μέθοδο με όνομα "{2}", ορίσματα {3}  η οποία να είναι τύπου void.
reqConstructor = Η κλάση "{0}" πρέπει να περιέχει έναν {1} κατασκευαστή με ορίσματα {2}.
reqConstructorVoid = Η κλάση "{0}" πρέπει να περιέχει έναν {1} κενό κατασκευαστή.
reqOverrideObjectMethod = Η κλάση "{0}" πρέπει να επικαλύπτει την μέθοδο "{1}".
reqMethodCallMethod = Στην μέθοδο "{0}" της κλάσης "{1}" πρέπει να καλείται η μέθοδος "{2}" της κλάσης "{3}". 
reqConstructorCallMethod = Στον κατασκευαστή της κλάσης "{0}" με ορίσματα {1} πρέπει να καλείται η μέθοδος "{2}" της κλάσης "{3}".
reqConstructorCallConstructor = Στον κατασκευαστή της κλάσης "{0}" με ορίσματα {1} πρέπει να καλείται ο κατασκευαστής της υπερκλάσης με ορίσματα {2}.